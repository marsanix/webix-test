import { JetView } from "webix-jet";
import * as Cookies from "js-cookie";

export default class LoginView extends JetView {
	config() {
		let values = webix.copy({
			email: "marsanix@gmail.com",
			password: "password123456",
			rememberme: false
		}, Cookies.getJSON("Crm"));

		const authService = this.app.getService("auth");

		let ui = {
			css: "login-background",
			cols: [
				{ gravity: 1, template: "" },
				{
					rows: [
						{ gravity: 1, template: '<div style="margin-top: 50px; text-align: center;"><img src="data/images/webix.png" style="width: 20rem;" alt="" /></div>', css: "bg-clear" },
						{
							view: "form",
							gravity: 1,
							id: "loginForm",
							width: 500,
							elements: [
								{
									view: "text",
									id: "email",
									name: "email",
									label: "Email",
									value: values.email,
									required: true,
								},
								{
									view: "text",
									id: "password",
									name: "password",
									label: "Password",
									value: values.password,
									required: true,
									type: "password"
								},
								{
									view: "checkbox",
									id: "remember",
									name: "rememberme",
									label: "Remember credentials?",
									labelPosition: "left",
									labelWidth: 200,
									checkValue: true,
									uncheckValue: false,
									value: values.rememberme
								},
								{
									view: "button",
									id: "login",
									name: "login",
									label: "Login",
									hotkey: "enter",
									click: function () {
										let component = $$("loginForm");
										if (component.validate()) {
											component.disable();
											component.showProgress();
											let values = $$("loginForm").getValues();
											if (true === values.rememberme) {
												Cookies.set("Crm", values);
											} else {
												// Clear cookie
												Cookies.remove("Crm");
											}
											authService.login(values.email, values.password).catch(e => {
												webix.message({
													type: "error",
													text: "User/password combination not recognized"
												});

												component.hideProgress();
												component.enable();
												component.focus();
											});
										} else {
											$$("loginForm").focus();
										}
									}
								}
							],
							elementsConfig: {
								labelPosition: "top",
								validateEvent: "key"
							}
						},
						{ gravity: 1, template: "" }
					]
				},
				{ gravity: 1, template: "" }
			]
		};

		return ui;
	}

	init(view, url) {
		webix.extend($$("loginForm"), webix.ProgressBar);
	}
}